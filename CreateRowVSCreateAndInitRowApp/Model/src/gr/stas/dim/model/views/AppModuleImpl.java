package gr.stas.dim.model.views;


import gr.stas.dim.model.views.common.AppModule;

import java.util.ArrayList;
import java.util.List;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 07 16:27:18 EEST 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }

    /**
     * Container's getter for CountriesView1.
     * @return CountriesView1
     */
    public ViewObjectImpl getCountriesView1() {
        return (ViewObjectImpl)findViewObject("CountriesView1");
    }

    /**
     * Container's getter for DepartmentsView1.
     * @return DepartmentsView1
     */
    public ViewObjectImpl getDepartmentsView1() {
        return (ViewObjectImpl)findViewObject("DepartmentsView1");
    }

    /**
     * Container's getter for EmployeesView1.
     * @return EmployeesView1
     */
    public ViewObjectImpl getEmployeesView1() {
        return (ViewObjectImpl)findViewObject("EmployeesView1");
    }

    /**
     * Container's getter for JobsView1.
     * @return JobsView1
     */
    public ViewObjectImpl getJobsView1() {
        return (ViewObjectImpl)findViewObject("JobsView1");
    }

    /**
     * Container's getter for DepartmentsView2.
     * @return DepartmentsView2
     */
    public ViewObjectImpl getDepartmentsView2() {
        return (ViewObjectImpl)findViewObject("DepartmentsView2");
    }

    /**
     * Container's getter for EmployeesView2.
     * @return EmployeesView2
     */
    public ViewObjectImpl getEmployeesView2() {
        return (ViewObjectImpl)findViewObject("EmployeesView2");
    }

    /**
     * Container's getter for EmployeesView3.
     * @return EmployeesView3
     */
    public ViewObjectImpl getEmployeesView3() {
        return (ViewObjectImpl)findViewObject("EmployeesView3");
    }

    /**
     * Container's getter for EmployeesView4.
     * @return EmployeesView4
     */
    public ViewObjectImpl getEmployeesView4() {
        return (ViewObjectImpl)findViewObject("EmployeesView4");
    }

    /**
     * Container's getter for DeptMgrFkLink1.
     * @return DeptMgrFkLink1
     */
    public ViewLinkImpl getDeptMgrFkLink1() {
        return (ViewLinkImpl)findViewLink("DeptMgrFkLink1");
    }

    /**
     * Container's getter for EmpManagerFkLink1.
     * @return EmpManagerFkLink1
     */
    public ViewLinkImpl getEmpManagerFkLink1() {
        return (ViewLinkImpl)findViewLink("EmpManagerFkLink1");
    }

    /**
     * Container's getter for EmpDeptFkLink1.
     * @return EmpDeptFkLink1
     */
    public ViewLinkImpl getEmpDeptFkLink1() {
        return (ViewLinkImpl)findViewLink("EmpDeptFkLink1");
    }

    /**
     * Container's getter for EmpJobFkLink1.
     * @return EmpJobFkLink1
     */
    public ViewLinkImpl getEmpJobFkLink1() {
        return (ViewLinkImpl)findViewLink("EmpJobFkLink1");
    }
    
    /**
     * calls VO.createRow() method. For Department Creation. Then, calls setAttribute(String,Object) to set the ManagerId.
     * @param empId
     */
    public void createRowSetAttributeDepartment(oracle.jbo.domain.Number empId){
        DepartmentsViewImpl dept=(DepartmentsViewImpl)this.getDepartmentsView1();
        
          DepartmentsViewRowImpl rowImpl= (DepartmentsViewRowImpl)dept.createRow();

          rowImpl.setManagerId(empId);
          
          dept.insertRow(rowImpl);
          dept.setCurrentRow(rowImpl);
        
    }
    
    /**
     * calls VO.createRow() method. For Department Creation. Uses setAttributeValues(List,List) method.
     * @param empId
     */
    public void createRowSetAttributeValuesDepartment(oracle.jbo.domain.Number empId){
        
        List<String> attributeNames = new ArrayList<String>();
        List<Object> attributeValues = new ArrayList<Object>();
        
        DepartmentsViewImpl dept=(DepartmentsViewImpl)this.getDepartmentsView1();
        
          DepartmentsViewRowImpl rowImpl= (DepartmentsViewRowImpl)dept.createRow();
        
        attributeNames.add("ManagerId");
        attributeValues.add(empId);
        rowImpl.setAttributeValues(attributeNames, attributeValues);
        
        dept.insertRow(rowImpl);
        dept.setCurrentRow(rowImpl);
        
        
    }
    
    /**
     * Calls VO.createAndInitRow(AttributeList nvp) method. For Department Creation.
     * @param empId
     */
    public void createAndInitRowDepartment(oracle.jbo.domain.Number empId){
        
        DepartmentsViewImpl dept=(DepartmentsViewImpl)this.getDepartmentsView1();
        NameValuePairs nvp=new NameValuePairs();
        nvp.setAttribute("ManagerId", empId);
        DepartmentsViewRowImpl row=(DepartmentsViewRowImpl)dept.createAndInitRow(nvp);
        dept.insertRow(row);
        dept.setCurrentRow(row);
        
    }
    
    /**
     * calls VO.createRow() method. For Employees creation. This method Uses createMethod() call and then,
     * calls setAttribute(String, Object) to set Value to DepartmentId attribute in order to return ManagerId value also.
     * @param depId.
     * 
     */
    public void createRowSetAttributeEmployees(oracle.jbo.domain.Number depId){
        
        EmployeesViewImpl emp=(EmployeesViewImpl)this.getEmployeesView1();
        EmployeesViewRowImpl empRow =(EmployeesViewRowImpl)emp.createRow();
        empRow.setDepartmentId(depId);
        emp.insertRow(empRow);
        emp.setCurrentRow(empRow);
        
    }
    
    /**
     * calls VO.createRow() method. For Employees creation. This method Uses createMethod() call and then,
     * calls setAttributeVAlues(List, List) to set Value to DepartmentId attribute in order to return ManagerId value also.
     * @param depId.
     * 
     */
    public void createRowSetAttributeValuesEmployees(oracle.jbo.domain.Number depId){
        List<String> attributeNames = new ArrayList<String>();
        List<Object> attributeValues = new ArrayList<Object>();
        
        EmployeesViewImpl emp=(EmployeesViewImpl)this.getEmployeesView1();
        EmployeesViewRowImpl empRow =(EmployeesViewRowImpl)emp.createRow();
        
        attributeNames.add("DepartmentId");
        attributeValues.add(depId);
        empRow.setAttributeValues(attributeNames, attributeValues);
        
        emp.insertRow(empRow);
        emp.setCurrentRow(empRow);
        
    }
    
    /**
     * Calls VO.createAndInitRow(AttributeList nvp) method. For Employees creation. 
     * This is to set DepartmentId in order to fetch ManagerId.
     * @param depId.
     */
    public void createAndInitRowEmployees(oracle.jbo.domain.Number depId){
        
        EmployeesViewImpl emp=(EmployeesViewImpl)this.getEmployeesView1();
        NameValuePairs nvp=new NameValuePairs();
        nvp.setAttribute("DepartmentId", depId);
        EmployeesViewRowImpl row=(EmployeesViewRowImpl)emp.createAndInitRow(nvp);
        emp.insertRow(row);
        emp.setCurrentRow(row);
        
    }

    public void createAndInitRow(Number empId) {
    }

    public void createRow(Number empId) {
    }
}
